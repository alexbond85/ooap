abstract class PowerSet<T> : HashTable<T>

  // конструктор
// постусловие: создано пустое множество
// на максимальное количество элементов sz
  public PowerSet<T> PowerSet(int sz);

  // запросы
// возвращает пересечение текущего множества
// с множеством set
  public PowerSet<T> Intersection(PowerSet<T> set);

// возвращает объединение текущего множества
// и множества set
  public PowerSet<T> Union(PowerSet<T> set);

// возвращает разницу между текущим множеством
// и множеством set
  public PowerSet<T> Difference(PowerSet<T> set);

// проверка, будет ли set подмножеством
// текущего множества
  public bool IsSubset(PowerSet<T> set);


Обратите внимание, что операции Intersection, Union и Difference не требуют ни предусловий,
ни постусловий. Они замкнуты: корректно и полностью определены на типе данных (структуре данных) "множество".
Более того, пользователю не нужно заботиться об ограничениях на максимальное количество элементов,
например, при операции Union(): корректная реализация скрыто учтёт и задаст правильный
максимальный размер итогового множества.