5. Основополагающий принцип открытости-закрытости модуля
Это первый из пяти фундаментальных принципов объектно-ориентированного
программирования и проектирования, известный как The Open Closed Principle (OCP). Сами
принципы в нынешней форме были собраны в начале 2000-х годов
Робертом Мартином ( автором легендарных книг "Чистый код", "Чистая архитектура",
"Идеальный программист" и др.) и получили общее название SOLID (от первых букв названий принципов).

Модуль считается открытым, если его можно продолжать расширять.

Модуль считается закрытым, когда он выложен в продакшен, и им можно только пользоваться.

На практике мы получаем парадоксальное требование, что модуль должен быть закрытым, чтобы он поступил в
эксплуатацию, но он должен быть открытым для дальнейшей модификации в процессе развития проекта.
Представим, что у нас имеется закрытый модуль, и потребовалось что-то расширить в его
функциональности, так как никогда не будет гарантии, что мы заранее учли все проектные особенности.
Ужасный способ сделать это -- создать полную копию закрытого модуля, и что-то в нём начать менять.
Правильно решается эта проблема именно наследованием.

Задание 4.
Приведите пример иерархии классов (словесное описание), где применяется принцип Открыт-Закрыт, и
обоснуйте, почему одни классы (модули) выбраны открытыми, а другие закрытыми.
