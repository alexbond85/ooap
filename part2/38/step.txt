38. Базовый принцип проектирования иерархий классов
"Естественный", наивный способ проектирования наследования, характерный и для программистов, и для людей, не знакомых ни с программированием, ни с проектированием -- это подход "сверху вниз" (от общего к частному), когда сперва определяется родительский класс, и затем постепенно к нему добавляются более специфичные потомки.

Естественность действительно часто хороша для описания иерархии, однако она совсем не лучший способ в процессе её создания. Когда мы смотрим на готовую иерархию, она нам часто кажется очевидной, однако при попытке создать что-то подобное на практике начинаются сложности. Дело в том, что людям гораздо привычнее выявлять, обнаруживать сначала частные случаи, и только потом их обобщать. В жизни мы встречаемся исключительно с реальными частностями, а любые их обобщения потом додумываем в голове.

Поэтому, главное правило -- не спешить с родительскими абстракциями. Постепенно накапливайте список различных сущностей, которые явно подразумеваются в проекте, а формирование их предков, добавление нового уровня абстракции, откладывайте. Довольно часто выбрать одну форму обобщения сразу не удаётся, абстракций обычно допускается несколько, и какой вариант, какую категорию наследования взять, зависит от проектных требований, от нужд заказчиков, от потребностей других разработчиков.

Например, односвязный список можно обобщить до
-- универсального списка с курсором (как мы делали на первом курсе);
-- графа -- структуры, где допускается множество связей между узлами;
-- очереди;
-- перечислимой, последовательной структуры данных.

Иногда конечно удаётся двигаться и сверху вниз, от быстро находимой абстракции к частному, но такой подход подразумевает большой опыт проектирования, поэтому лучше всегда начинать с конкретных классов.