33. Наследование вида и полиморфизм
На помощь приходит полиморфизм. Класс Соглашение с подклассами Постоянный сотрудник, Контрактник, ... мы
реализуем отдельной, независимой иерархией, и поле Contract в классе Сотрудник будет иметь тип
Соглашение (отношение has-a). Возможно, для реализации иерархии Соглашения хорошо подойдёт льготное
наследование, так как скорее всего наследовать потребуется лишь константы. Другой хороший подход -- выделить
в Соглашении набор операций, специфических именно для него. Более того, очень возможно, что и иерархию классов
Должности как потомков Сотрудника тоже лучше вынести в свою отдельную автономную иерархию, как и Соглашение, с
отношением "содержит" для класса Сотрудник (сотрудник "содержит" и конкретное соглашение, и конкретную должность).

Наследование вида полезно в следующих случаях:
-- подразумевается несколько критериев классификации некоторой родительской сущности, и выделить из них
   единственный самый главный не удаётся;
-- подразумевается активное комбинирование этих критериев (разные значения должностей и рабочих соглашений);
-- родительская сущность каждой иерархии играет в проекте весьма серьёзную роль, и качественно продумать её
   спецификацию АТД очень важно.

Задание 22.

Приведите пример иерархии, которая реализует наследование вида, и объясните, почему.
