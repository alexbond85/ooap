Принципы:

1. Новый модуль может задавать некоторый базовый тип, который потенциально должен допускать
параметризацию другими типами (обобщённые типы, типы-генерики);

2. Новый модуль может объединять несколько функций, которые активно обращаются друг к другу;

3. Новый модуль может входить в семейство модулей, ориентированных на решение некоторой
общей задачи, которую не удаётся решить с помощью одного модуля;

4. Новый модуль может предлагать конкретную реализацию родительского модуля, которая
должна выбираться динамически (полиморфно) -- например, реализация обобщённого типа для конкретного типа-параметра;

5. Новый модуль может интегрировать общее поведение нескольких модулей, которые различаются лишь деталями.

Ответ для python:

1. Не реализовано. В pyhton динамическая типизация.
2. Да. Модуль может содержать в себе взаимосвязанные функции/классы.
3. Да. Одна из (спорных) best-practice в каталоге с модулями импортировать в __init__.py необходимые функции/классы.
4. Нет. В python нет иерархии модулей.
5. Скорее да. Например, в новом модуле имплементируется реализация АДТ из импортированного модуля.
