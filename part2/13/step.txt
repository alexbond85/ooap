13. Принцип Открыт/Закрыт применительно к иерархии классов
Если позволяет конкретный язык программирования, для ряда классов желательно полностью
запретить возможность переопределения ряда их методов (например если так требует
спецификация и мы хотим, чтобы реализация гарантированно с ней совпадала). В таком
случае, во-первых, мы формально поддерживаем принцип открытости-закрытости, и во-вторых,
всегда нежелательно переопределять универсальные операции, входящие в General.

В крайнем случае можно создать например две версии операций копирования -- одну закрытую, и
другую открытую для переопределений (возможно, как абстрактный метод, или по умолчанию
вызывающую закрытую версию). Только при создании таких открытых версий желательно добавлять
подобные открытые версии и для схожих по смыслу операций (например, разрешая переопределять
копирование, надо создать также и две операции клонирования) -- из соображений единой семантики.
Однако, по умолчанию такие пары методов должны быть закрыты, если открытость для них по
спецификации не требуется.

Задание 10.

Выясните, имеется ли в вашем языке программирования возможность запрета переопределения методов в
потомках, и приведите пример кода.

