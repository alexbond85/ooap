# Рассмотрим следующую иерархию:

class A:

    def __init__(self):
        self.__a = "a"
        self.__b = "b"
        self.__c = "c"

    def a(self) -> str:
        return self.__a

    def _b(self) -> str:
        return self.__b

    def __c(self) -> str:
        return self.__c


class B(A):

    def c(self):
        return self.a() + self._b()

# 1. метод (a) публичен в родительском классе А и публичен в его потомке B;
# 2. ОТСУТСВУЕТ. метод публичен в родительском классе А и скрыт в его потомке B;
# 3. ОТСУТСВУЕТ. метод _b() скрыт в родительском классе А и публичен в его потомке B.
# 4. метод _b() скрыт в родительском классе А и скрыт в его потомке B => извне не подразумевается вызов _b().

# Интересная ситуация с методом __c() - он доступен только внутри класса A и скрыт от потомков.

# https://www.python.org/dev/peps/pep-0008/
